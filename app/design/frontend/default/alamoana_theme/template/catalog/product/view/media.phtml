<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product media data template
 *
 * @see Mage_Catalog_Block_Product_View_Media
 */
/**
 * - Image with id="image" in the first "if" statement: added width to keep static size
 * - Image size is based on admin settings
 */
?>
<?php
    $_product = $this->getProduct();
    $_helper = $this->helper('catalog/output');

?>
<?php if ($_product->getImage() != 'no_selection' && $_product->getImage()): ?>
<?php    
    //Get image width from admin config. Check whether aspect ratio has to be kept.
    
    $large_img_width = trim(Mage::getStoreConfig('customadmin/images/product_main_width', Mage::app()->getStore()->getId()));
	$large_img_height = trim(Mage::getStoreConfig('customadmin/images/product_main_height', Mage::app()->getStore()->getId()));
	
	
	
	
    if($large_img_height)
	{
		$set_height = $large_img_height;
	}
	if ($large_img_width <= 0) $large_img_width = 265; //If width is not set, use default value
    if ($large_img_width)
	{
		if($set_height)
		{
    	    $img_path = $this->helper('catalog/image')->init($_product, 'image')
            ->resize($large_img_width,$set_height);
		}
		else
		{
    	    $img_path = $this->helper('catalog/image')->init($_product, 'image')
            ->constrainOnly(TRUE)
            ->keepAspectRatio(TRUE)
            ->keepFrame(FALSE)
            ->resize($large_img_width);
			}
	}
	else
     {
		    $img_path = $this->helper('catalog/image')->init($_product, 'image')->resize($large_img_width);
	 }
?>
<p class="product-image product-image-zoom">
    <?php
        $_img = '<img id="image" src="'.$img_path.'" alt="'.$this->htmlEscape($this->getImageLabel()).'" title="'.$this->htmlEscape($this->getImageLabel()).'" width="'.$large_img_width.'" />';
        echo $_helper->productAttribute($_product, $_img, 'image');
    ?>
</p>
<?php /* my:deleted. Zoom is not needed.
?><script type="text/javascript">
//<![CDATA[
    Event.observe(window, 'load', function() {
        product_zoom = new Product.Zoom('image', 'track', 'handle', 'zoom_in', 'zoom_out', 'track_hint');
    });
//]]>
</script><?php */?>

<?php else: ?>
<p class="product-image">
    <?php
        $_img = '<img src="'.$this->helper('catalog/image')->init($_product, 'image')->resize($large_img_width).'" alt="'.$this->htmlEscape($this->getImageLabel()).'" title="'.$this->htmlEscape($this->getImageLabel()).'" width="'.$large_img_width.'" />';
        echo $_helper->productAttribute($_product, $_img, 'image');
    ?>
</p>
<?php endif; ?>
<?php if (count($this->getGalleryImages()) > 0): ?>

<?php
	 //For thumnail image 
	 
	$thumb_width	= intval(Mage::getStoreConfig('customadmin/images/product_thumbnail_width', Mage::app()->getStore()->getId()));
	$thumb_height	= intval(Mage::getStoreConfig('customadmin/images/product_thumbnail_height', Mage::app()->getStore()->getId()));
	
	if($thumb_height)
	{
		$thumb_height_fix = $thumb_height;
	}
	else
	{
			$thumb_height_fix = 56;
	}
    if ($thumb_width)
	{
			$thumb_width_fix = $thumb_width;
	}
	else
     {		
	 		$thumb_width_fix = 56;
	 }

?>

<div class="more-views">
    <h2><?php echo $this->__('More Views') ?></h2>
    <ul>
    <?php foreach ($this->getGalleryImages() as $_image): ?>
    	
    
        <li>
            <a href="#" onclick="popWin('<?php echo $this->getGalleryUrl($_image) ?>', 'gallery', 'width=300,height=300,left=0,top=0,location=no,status=yes,scrollbars=yes,resizable=yes'); return false;" title="<?php echo $this->htmlEscape($_image->getLabel()) ?>"><img src="<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'thumbnail', $_image->getFile())->resize($thumb_width_fix,$thumb_height_fix); ?>" alt="<?php echo $this->htmlEscape($_image->getLabel()) ?>" /></a>
        </li>
    <?php endforeach; ?>
    </ul>
</div>
<?php endif; ?>
